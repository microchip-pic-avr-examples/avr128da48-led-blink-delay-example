
AVRDA_LED_blink_delay.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00804000  00804000  00000190  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000013c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000190  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001c0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000200  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003199  00000000  00000000  00000220  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002d49  00000000  00000000  000033b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000039d  00000000  00000000  00006102  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000064a0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000016e7  00000000  00000000  000064c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000048  00000000  00000000  00007bab  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00007bf3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 76 00 	jmp	0xec	; 0xec <__ctors_end>
   4:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
   8:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
   c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  10:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  14:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  18:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  1c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  20:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  24:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  28:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  2c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  30:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  34:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  38:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  3c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  40:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  44:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  48:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  4c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  50:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  54:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  58:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  5c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  60:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  64:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  68:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  6c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  70:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  74:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  78:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  7c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  80:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  84:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  88:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  8c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  90:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  94:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  98:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  9c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  a0:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  a4:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  a8:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  ac:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  b0:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  b4:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  b8:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  bc:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  c0:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  c4:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  c8:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  cc:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  d0:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  d4:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  d8:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  dc:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  e0:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  e4:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  e8:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>

000000ec <__ctors_end>:
  ec:	11 24       	eor	r1, r1
  ee:	1f be       	out	0x3f, r1	; 63
  f0:	cf ef       	ldi	r28, 0xFF	; 255
  f2:	cd bf       	out	0x3d, r28	; 61
  f4:	df e7       	ldi	r29, 0x7F	; 127
  f6:	de bf       	out	0x3e, r29	; 62
  f8:	0e 94 82 00 	call	0x104	; 0x104 <main>
  fc:	0c 94 9c 00 	jmp	0x138	; 0x138 <_exit>

00000100 <__bad_interrupt>:
 100:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000104 <main>:


int main(void)
{
	/* Configure LED0 pin as output */
    PORTC.DIRSET = PIN6_bm; 
 104:	80 e4       	ldi	r24, 0x40	; 64
 106:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <__TEXT_REGION_LENGTH__+0x7e0441>

    while (1) 
    {
		/* LED0 on */
        PORTC.OUTSET = PIN6_bm;
 10a:	e0 e4       	ldi	r30, 0x40	; 64
 10c:	f4 e0       	ldi	r31, 0x04	; 4
 10e:	85 83       	std	Z+5, r24	; 0x05
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 110:	2f ef       	ldi	r18, 0xFF	; 255
 112:	34 e3       	ldi	r19, 0x34	; 52
 114:	9c e0       	ldi	r25, 0x0C	; 12
 116:	21 50       	subi	r18, 0x01	; 1
 118:	30 40       	sbci	r19, 0x00	; 0
 11a:	90 40       	sbci	r25, 0x00	; 0
 11c:	e1 f7       	brne	.-8      	; 0x116 <main+0x12>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <main+0x1c>
 120:	00 00       	nop
        _delay_ms(DELAY_TIME);
		/* LED0 off */
        PORTC.OUTCLR = PIN6_bm;
 122:	86 83       	std	Z+6, r24	; 0x06
 124:	2f ef       	ldi	r18, 0xFF	; 255
 126:	34 e3       	ldi	r19, 0x34	; 52
 128:	9c e0       	ldi	r25, 0x0C	; 12
 12a:	21 50       	subi	r18, 0x01	; 1
 12c:	30 40       	sbci	r19, 0x00	; 0
 12e:	90 40       	sbci	r25, 0x00	; 0
 130:	e1 f7       	brne	.-8      	; 0x12a <main+0x26>
 132:	00 c0       	rjmp	.+0      	; 0x134 <main+0x30>
 134:	00 00       	nop
 136:	eb cf       	rjmp	.-42     	; 0x10e <main+0xa>

00000138 <_exit>:
 138:	f8 94       	cli

0000013a <__stop_program>:
 13a:	ff cf       	rjmp	.-2      	; 0x13a <__stop_program>
